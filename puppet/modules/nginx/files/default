server {
    server_name 123.123.12.12;
    listen   80; ## listen for ipv4; this line is default and implied
    port_in_redirect off;
    server_tokens off;
    autoindex off;

#    include includes/nginx_redirect.conf;
#    include includes/redirects.conf;

    client_max_body_size 15m;
    client_body_buffer_size 128k;

    # WordPress needs to be in the webroot of /var/www/ in this case
    root /vagrant/wordpress-test/bypronto/;
    access_log /var/log/nginx/bypronto_access.log;
    error_log /var/log/nginx/bypronto_error.log;
    index index.html index.htm index.php;

    # Define default caching of 10 min
    expires 600s;
    add_header Pragma public;
    add_header Cache-Control "max-age=600, public, must-revalidate, proxy-revalidate";

    # deliver a static error
    error_page 403  /403-error.html;
    location = /403-error.html {
        root /var/www/Server-Error-Pages;
    }

    error_page 404  /404-error.html;
    location = /404-error.html {
        root /var/www/Server-Error-Pages;
    }
    error_page 410  /Maintenance-Page.html;
    location = /Maintenance-Page.html {
        root /var/www/Server-Error-Pages;
    }
    error_page 500  /500-error.html;
    location = /500-error.html {
        root /var/www/Server-Error-Pages;
    }
    error_page 502  /502-error.html;
    location = /502-error.html {
        root /var/www/Server-Error-Pages;
    }
    error_page 503  /503-error.html;
    location = /503-error.html {
        root /var/www/Server-Error-Pages;
    }
error_page 504  /504-error.html;
    location = /504-error.html {
        root /var/www/Server-Error-Pages;
    }

    # Deliver 404 instead of 403 "Forbidden"
#    error_page 403 = 404;
    location = /nginx_stub_status {
        stub_status on;
        allow 127.0.0.1;
        deny all;
    }

#location ~ ^(.*)/http(.*)/files/(.*)$ {
#         try_files /wp-content/blogs.dir/$blogid/files/$3 /wp-includes/ms-files.php?file=$3 ;
          #access_log off; log_not_found off; expires max;
#}

#location ~ ^/files/(.*)$ {
#        rewrite (.*) https://google.com break;
#         try_files /wp-content/blogs.dir/$blogid/$uri /wp-includes/ms-files.php?file=$1 ;
#          #access_log off; log_not_found off; expires max;
# }

location ^~ /blogs.dir {
    internal;
    alias /var/www/bypronto/wp-content/blogs.dir ;
#        access_log off; log_not_found off;      expires max;
}

location ^~ /wp-content/uploads/ {
    alias /var/www/bypronto/wp-content/uploads/;
#               expires 1d;
#                add_header Cache-Control public;
    access_log off; log_not_found off;
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods GET,PUT,POST,DELETE,OPTIONS;
    add_header Access-Control-Allow-Headers Content-Type;
}

location ^~ /wp-content/themes/ {
    access_log off; log_not_found off;

    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods GET,PUT,POST,DELETE,OPTIONS;
    add_header Access-Control-Allow-Headers Content-Type;
}

location ^~ /wp-content/themes/core/js/ {
    alias /var/www/bypronto/wp-content/themes/core/js/;
#               expires 1d;
#                add_header Cache-Control public;

    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods GET,PUT,POST,DELETE,OPTIONS;
    add_header Access-Control-Allow-Headers Content-Type;
}

#location ^~ /wp-admin {
#if ($http_x_forward_for !~ (58\.137\.162\.40|58\.137\.162\.40|183\.89\.154\.247)) {
#     return 410;
#}
#}

# Do not allow access to files giving away your WordPress version
location ~ /(\.|wp-config.php|readme.html|licence.txt) {
    return 404;
}

# Add trailing slash to */wp-admin requests.
rewrite /wp-admin$ $scheme://$host$uri/ permanent;

# Don't log robots.txt requests
location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
}

    location ~* \.(eot|ttf|woff)$ {
            add_header Access-Control-Allow-Origin *;
    }

# Aggressive caching for static files
# If you alter static files often, please use
# add_header Cache-Control "max-age=31536000, public, must-revalidate, proxy-revalidate";
location ~* \.(asf|asx|wax|wmv|wmx|avi|bmp|class|divx|doc|docx|eot|exe|gif|gz|gzip|ico|jpg|jpeg|jpe|mdb|mid|midi|mov|qt|mp3|m4a|mp4|m4v|mpeg|mpg|mpe|mpp|odb|odc|odf|odg|odp|ods|odt|ogg|ogv|otf|pdf|png|pot|pps|ppt|pptx|ra|ram|svg|svgz|swf|tar|t?gz|tif|tiff|ttf|wav|webm|wma|woff|wri|xla|xls|xlsx|xlt|xlw|zip)$ {
    expires 31536000s;
    access_log off;
    log_not_found off;
    add_header Pragma public;
    add_header Cache-Control "max-age=31536000, public";
}

###################################
# WordPress multisite subdirectory rules.
# Designed to be included in any server {} block.

# This order might seem weird - this is attempted to match last if rules below fail.
# http://wiki.nginx.org/HttpCoreModule
location / {
    index index.php;
    try_files $uri $uri/ /index.php?$args;
}

# Directives to send expires headers and turn off 404 error logging.
location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires 7d;
    log_not_found off;
}


# Uncomment one of the lines below for the appropriate caching plugin (if used).
#include global/wordpress-ms-subdir-wp-super-cache.conf;
#include global/wordpress-ms-subdir-w3-total-cache.conf;

# Rewrite multisite '.../wp-.*' and '.../*.php'.
if (!-e $request_filename) {
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;
    rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) $1 last;
    rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ $1 last;
}
#######SEO#######
rewrite ^/sitemap_index\.xml$ /index.php?sitemap=1 last;
rewrite ^/([^/]+?)-sitemap([0-9]+)?\.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;

#######################cache#############################

    #fastcgi_cache start
    set $skip_cache 0;

    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
            set $skip_cache 1;
    }
#       if ($query_string != "") {
#               set $skip_cache 1;
#       }

        # Don't cache uris containing the following segments
        if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
                set $skip_cache 1;
        }

        # Don't use the cache for logged in users or recent commenters
        if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
                set $skip_cache 1;
        }

#########################################################

location ~* \wp-login.php {
   try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
 #       fastcgi_pass unix:/var/run/php5-fpm.sock;
    fastcgi_pass 127.0.0.1:9000;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param HTTP_REFERER $http_referer?pass;
}

# Pass all .php files onto a php-fpm/php-fcgi server.
location ~ \.php$ {
    # Zero-day exploit defense.
    # http://forum.nginx.org/read.php?2,88845,page=3
    # Won't work properly (404 error) if the file is not stored on this server, which is entirely possible with php-fpm/php-fcgi.
    # Comment the 'try_files' line out if you set up php-fpm/php-fcgi on another machine.  And then cross your fingers that you won't get hacked.
    error_page    404 = /xxx.html;

    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
#       fastcgi_pass unix:/var/run/php5-fpm.sock;
    fastcgi_pass 127.0.0.1:9000;
    fastcgi_index index.php;
    include fastcgi_params;
    proxy_connect_timeout  600s;
    proxy_send_timeout  600s;
    proxy_read_timeout  600s;
    fastcgi_send_timeout 600s;
    fastcgi_read_timeout 600s;

#        fastcgi_cache_bypass $skip_cache;
#        fastcgi_no_cache $skip_cache;
#        fastcgi_cache WORDPRESS;
#        fastcgi_cache_valid  200 301 10m;
#        fastcgi_cache_valid       404 5m;
#        fastcgi_cache_valid       any 10m;

    add_header X-Cache-Status $upstream_cache_status;
}

###############################

}
